<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/cache 
    	http://www.springframework.org/schema/cache/spring-cache.xsd"> 
  
    <context:component-scan base-package="com.sztx.wsy.*" />
    <aop:aspectj-autoproxy proxy-target-class="true"/>
   <mvc:annotation-driven>
        <mvc:return-value-handlers>
           <!--  添加统一返回值的处理器 -->
            <bean class="com.sztx.wsy.common.domain.CommonMethodReturnValueHandler"/>
        </mvc:return-value-handlers>
    </mvc:annotation-driven>

    <!-- 添加统一异常处理器 -->
    <bean class="com.sztx.wsy.common.domain.CommonExceptionHandler">
    </bean>
    
   	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
   	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    
    <!-- spring的属性加载器，加载properties文件中的属性 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:config.properties</value>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
    
    <!-- 数据库公共连接 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="poolProperties">
			<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
				<property name="driverClassName" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
				<property name="jmxEnabled" value="true" />
				<property name="testWhileIdle" value="true" />
				<property name="testOnBorrow" value="true" />
				<property name="testOnReturn" value="false" />
				<property name="validationInterval" value="30000" />
				<property name="validationQuery" value="SELECT 1" />
				<property name="timeBetweenEvictionRunsMillis" value="30000" />
				<property name="maxActive" value="5" />
				<property name="initialSize" value="1" />
				<property name="maxWait" value="10000" />
				<property name="minEvictableIdleTimeMillis" value="30000" />
				<property name="minIdle" value="1" />
				<property name="maxIdle" value="3" />
				<property name="logAbandoned" value="false" />
				<property name="removeAbandoned" value="true" />
				<property name="removeAbandonedTimeout" value="60" />
			</bean>
		</property>
	</bean>
  
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
    <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/META-INF/ibatis/mybatis.xml" />
		<property name="mapperLocations" value="classpath*:/META-INF/ibatis/sqlmap/*.xml" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
  	
   <!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/" />  
        <property name="suffix" value=".html" />  
    </bean> -->
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/" />  
        <property name="suffix" value=".html" />  
    </bean>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    
    <bean id="jsonXssObjectMapper"
		class="com.fasterxml.jackson.databind.ObjectMapper" >
		<property name="dateFormat">
			<bean class="java.text.SimpleDateFormat">
				<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
			</bean>
		</property>
	</bean>

	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper" ref="jsonXssObjectMapper" />
	</bean>
	
	<bean name="handlerAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />
			</list>
		</property>
		<property name="order" value="0" />
	</bean>
	
	<bean id="departmentMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.DepartmentMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="employeeMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.EmployeeMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="accountMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.AccountMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="productClassifyMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProductClassifyMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="productMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProductMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="productStoreMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProductStoreMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="productStoreSetMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProductStoreSetMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="productStoreOperateMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProductStoreOperateMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="productStoreOperateDetailMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProductStoreOperateDetailMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="produceOrderMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProduceOrderMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="produceOrderProductMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProduceOrderProductMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="produceOrderProductDetailMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProduceOrderProductDetailMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="produceOrderProductDistributeMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ProduceOrderProductDistributeMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="receiptMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ReceiptMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="receiptProductMysqlDAO" class="org.mybatis.spring.mapper.MapperFactoryBean">
	    <property name="mapperInterface" value="com.sztx.wsy.dataaccess.dao.ReceiptProductMysqlDAO"></property>
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<mvc:interceptors>  
        <!-- <mvc:interceptor>  
            <mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/mobile/**"/>
            <bean class="com.sztx.wsy.interceptor.LoginInterceptor"/>  
        </mvc:interceptor> --> 
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.sztx.wsy.interceptor.LogInterceptor">
                <property name="openLog" value="true" />
            </bean>
        </mvc:interceptor>
        <!-- <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.sztx.wsy.interceptor.SqlLogInterceptor">
                 <property name="openLog" value="${logback.sql.openLog}" /> 
            </bean>
        </mvc:interceptor> -->
    </mvc:interceptors>
    
</beans>