<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sztx.wsy.dataaccess.dao.ProduceOrderProductDetailMysqlDAO">

  <resultMap id="ProduceOrderProductDetailDO" type="com.sztx.wsy.dataaccess.domain.ProduceOrderProductDetailDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="produce_order_product_id" jdbcType="INTEGER" property="produceOrderProductId" />
    <result column="shoe_code" jdbcType="INTEGER" property="shoeCode" />
    <result column="shoe_num" jdbcType="INTEGER" property="shoeNum" />
  </resultMap>

  <sql id="column_List">
    id, order_no, produce_order_product_id, shoe_code, shoe_num
  </sql>

  <select id="findByProductId" parameterType="java.lang.Integer" resultMap="ProduceOrderProductDetailDO">
    select 
    <include refid="column_List" />
    from produce_order_product_detail
    where produce_order_product_id = #{produceOrderProductId,jdbcType=INTEGER}
  </select>

  <delete id="delete">
    delete from produce_order_product_detail
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </delete>

  <insert id="batchAdd" parameterType="com.sztx.wsy.dataaccess.domain.ProduceOrderProductDetailDO">
    insert into produce_order_product_detail (order_no, produce_order_product_id, shoe_code, shoe_num)
    values 
      <foreach collection="orderProductDetailList" item="item" index="index" separator=",">
           (#{item.orderNo}, #{item.produceOrderProductId}, #{item.shoeCode}, #{item.shoeNum})
       </foreach>
  </insert>

  <!-- <select id="listCount" resultType="java.lang.Integer">
    select count(*) from produce_order_product_detail
     where 1=1 
    <if test="produceOrderProductDetailDO.produceOrderProductId != null and produceOrderProductDetailDO.produceOrderProductId != '' ">
       and produce_order_product_id = #{produceOrderProductDetailDO.produceOrderProductId,jdbcType=INTEGER}
    </if>

    <if test="produceOrderProductDetailDO.shoeCode != null and produceOrderProductDetailDO.shoeCode != '' ">
       and shoe_code = #{produceOrderProductDetailDO.shoeCode,jdbcType=INTEGER}
    </if>

    <if test="produceOrderProductDetailDO.shoeNum != null and produceOrderProductDetailDO.shoeNum != '' ">
       and shoe_num = #{produceOrderProductDetailDO.shoeNum,jdbcType=INTEGER}
    </if>

  </select>

  <select id="listPage" resultMap="ProduceOrderProductDetailDO">
  select
    <include refid="column_List" />
    from produce_order_product_detail where 1=1 
    <if test="produceOrderProductDetailDO.produceOrderProductId != null and produceOrderProductDetailDO.produceOrderProductId != '' ">
       and produce_order_product_id = #{produceOrderProductDetailDO.produceOrderProductId,jdbcType=INTEGER}
    </if>

    <if test="produceOrderProductDetailDO.shoeCode != null and produceOrderProductDetailDO.shoeCode != '' ">
       and shoe_code = #{produceOrderProductDetailDO.shoeCode,jdbcType=INTEGER}
    </if>

    <if test="produceOrderProductDetailDO.shoeNum != null and produceOrderProductDetailDO.shoeNum != '' ">
       and shoe_num = #{produceOrderProductDetailDO.shoeNum,jdbcType=INTEGER}
    </if>

    <if test="pageQuery != null">
      limit #{pageQuery.start} , #{pageQuery.pageSize} 
    </if>

  </select> -->

</mapper>
