<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sztx.wsy.dataaccess.dao.ProductStoreMysqlDAO">

  <resultMap id="ProductStoreDO" type="com.sztx.wsy.dataaccess.domain.ProductStoreDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="shoe_code" jdbcType="INTEGER" property="shoeCode" />
    <result column="shoe_num" jdbcType="INTEGER" property="shoeNum" />
    <result column="store_max" jdbcType="INTEGER" property="storeMax" />
    <result column="store_min" jdbcType="INTEGER" property="storeMin" />
  </resultMap>

  <sql id="column_List">
    id, product_id, shoe_code, shoe_num, store_max, store_min
  </sql>

  <select id="findByProductId" parameterType="java.lang.Integer" resultMap="ProductStoreDO">
    select 
    <include refid="column_List" />
    from product_store
    where product_id = #{productId,jdbcType=INTEGER}
  </select>

  <delete id="delete">
    delete from product_store
    where id = #{productId,jdbcType=INTEGER}
  </delete>

  <insert id="batchAdd" parameterType="com.sztx.wsy.dataaccess.domain.ProductStoreDO">
    insert into product_store (product_id, shoe_code, shoe_num)
    values 
       <foreach collection="productStoreList" item="item" index="index" separator=",">
           (#{item.productId},#{item.shoeCode},#{item.shoeNum})
       </foreach>
  </insert>
  
  <update id="batchUpdate" parameterType="com.sztx.wsy.dataaccess.domain.ProductStoreDO">  
     <foreach collection="productStoreList" item="item" index="index" separator=";">  
         update product_store
         <set>
           shoe_num = #{item.shoeNum}
         </set>
         where id = #{item.id}
    </foreach>
  </update>
  
  <update id="batchUpdateStoreSet" parameterType="com.sztx.wsy.dataaccess.domain.ProductStoreDO">  
     <foreach collection="productStoreList" item="item" index="index" separator=";">  
         update product_store
         <set>
           store_max = #{item.storeMax},
           store_min = #{item.storeMin}
         </set>
         where id = #{item.id}
    </foreach>
  </update>

  <!-- <select id="listCount" resultType="java.lang.Integer">
    select count(*) from product_store
     where 1=1 
    <if test="productStoreDO.productId != null and productStoreDO.productId != '' ">
       and product_id = #{productStoreDO.productId,jdbcType=INTEGER}
    </if>

    <if test="productStoreDO.shoeCode != null and productStoreDO.shoeCode != '' ">
       and shoe_code = #{productStoreDO.shoeCode,jdbcType=INTEGER}
    </if>

    <if test="productStoreDO.shoeNum != null and productStoreDO.shoeNum != '' ">
       and shoe_num = #{productStoreDO.shoeNum,jdbcType=INTEGER}
    </if>

  </select>

  <select id="listPage" resultMap="ProductStoreDO">
  select
    <include refid="column_List" />
    from product_store where 1=1 
    <if test="productStoreDO.productId != null and productStoreDO.productId != '' ">
       and product_id = #{productStoreDO.productId,jdbcType=INTEGER}
    </if>

    <if test="productStoreDO.shoeCode != null and productStoreDO.shoeCode != '' ">
       and shoe_code = #{productStoreDO.shoeCode,jdbcType=INTEGER}
    </if>

    <if test="productStoreDO.shoeNum != null and productStoreDO.shoeNum != '' ">
       and shoe_num = #{productStoreDO.shoeNum,jdbcType=INTEGER}
    </if>

    <if test="pageQuery != null">
      limit #{pageQuery.start} , #{pageQuery.pageSize} 
    </if>

  </select> -->

</mapper>
